trigger:
  branches:
    include:
      - main  # Trigger the pipeline when pushing to the main branch (adjust as necessary)

pool:
  name: windows  # Use a Linux agent pool for the build environment (you can use Ubuntu-based hosted agents)

jobs:
  - job: BuildAndDeploy
    displayName: 'Build and Deploy Laravel Application to EC2'
    steps:

      # Step 1: Checkout the repository
      - task: Checkout@1
        displayName: 'Checkout code'

      # Step 2: Install dependencies and build assets
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
        displayName: 'Install Composer (for Laravel)'

      - bash: |
          # Install PHP and necessary extensions
          sudo apt-get update -y
          sudo apt-get install -y nginx curl git unzip php7.4 php7.4-fpm php7.4-mbstring php7.4-xml php7.4-bcmath php7.4-curl php7.4-mysql composer

          # Clone the repository if not already cloned
          if [ ! -d "$HOME/laragym" ]; then
            git clone https://github.com/your-username/laragym.git $HOME/laragym  # Replace with your repository URL
          fi
          
          # Navigate to the Laravel app directory
          cd $HOME/laragym

          # Install Laravel dependencies via Composer
          composer install --no-dev --optimize-autoloader

          # Set correct folder permissions for Laravel storage and cache
          sudo chown -R www-data:www-data $HOME/laragym/storage $HOME/laragym/bootstrap/cache
          sudo chmod -R 775 $HOME/laragym/storage $HOME/laragym/bootstrap/cache

          # Run Laravel migrations and optimize the application
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # Build frontend assets (if any)
          npm install
          npm run prod
        displayName: 'Install PHP, Composer, Build Dependencies & Assets'

      # Step 3: Build artifacts (if any), such as compiled assets, environment file, etc.
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: $(Build.SourcesDirectory)/laragym
          ArtifactName: 'laragym-artifact'
          publishLocation: 'Container'
        displayName: 'Publish Artifacts'

